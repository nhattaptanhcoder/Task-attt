#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void copyArray(int* a, int* b, int size)
{
    for (int i = 0; i <= size; i++)
    {
        a[i] = b[i];
    }
}

void inDaThuc(int* daThuc, int bac)
{
    int dau = 0;
    for (int i = bac; i >= 0; i--)
    {
        if (daThuc[i] == 1)
        {
            if (dau)
                printf(" + ");
            if (i == 0)
            {
                printf("1");
            }
            else if (i == 1)
            {
                printf("x");
            }
            else
            {
                printf("x^%d", i);
            }
            dau = 1;
        }
    }
    if (!dau)
        printf("0");
    printf("\n");
}

void setMang0(int* a, int n)
{
    for (int i = 0; i <= n; i++)
    {
        a[i] = 0;
    }
}

int bacDaThuc(int* a, int n)
{
    for (int i = n; i >= 0; i--)
    {
        if (a[i] != 0)
        {
            return i;
        }
    }
    return -1;
}

void chiaDaThucNhiPhan(int* a, int n, int* b, int m, int* thuong, int* du)
{
    copyArray(du, a, n);
    setMang0(thuong, n);

    int bacB = bacDaThuc(b, m);
    int bacDu = bacDaThuc(du, n);

    while (bacDu >= bacB)
    {
        int bacHieu = bacDu - bacB;
        thuong[bacHieu] = 1;

        for (int i = bacB; i >= 0; i--)
        {
            du[bacHieu + i] ^= b[i];
        }
        bacDu = bacDaThuc(du, n);
    }
}

void nhanDaThucNhiPhan(int* a, int n, int* b, int m, int* tich)
{
    setMang0(tich, n + m + 2);

    for (int i = 0; i <= n; i++)
    {
        if (a[i] == 1)
        {
            for (int j = 0; j <= m; j++)
            {
                tich[i + j] ^= b[j];
            }
        }
    }
}

void congDaThucNhiPhan(int* a, int n, int* b, int m, int* ketQua)
{
    int bacLonNhat = (n > m) ? n : m;

    for (int i = 0; i <= bacLonNhat; i++)
    {
        if (i <= n && i <= m)
        {
            ketQua[i] = a[i] ^ b[i];
        }
        else if (i <= n)
        {
            ketQua[i] = a[i];
        }
        else
        {
            ketQua[i] = b[i];
        }
    }
}

void euclideMoRong(int* a, int n, int* b, int m)
{
    printf("\n");
    int x[2 * (m + 1)];
    int y[2 * (m + 1)];
    int q[m + 1];
    int r[m + 1];
    int x2[2 * (m + 1)];
    int x1[m + 1];
    int y2[2 * (m + 1)];
    int y1[m + 1];
    int qy1[2 * (m + 1)];
    int qx1[2 * (m + 1)];
    int cpb[m + 1];
    int cpa[m + 1];
    int du[2 * (m + 1)];
    copyArray(cpb, b, m);
    setMang0(cpa, m);
    copyArray(cpa, a, n);
    copyArray(a, cpa, m);
    int baccpb = bacDaThuc(cpb, m);
    int bacb = bacDaThuc(b, m);
    if (bacb == -1)
    {
        printf("Khong ton tai da thuc nghich dao.");
        free(x);
        free(y);
        free(q);
        free(r);
        free(x2);
        free(x1);
        free(y2);
        free(y1);
        free(qy1);
        free(qx1);
        free(cpb);
        free(du);
        return;
    }
    setMang0(x2, 2 * m + 1);
    setMang0(x1, m);
    setMang0(y2, 2 * m + 1);
    setMang0(y1, m);
    x2[0] = 1;
    y1[0] = 1;
    int baca = bacDaThuc(a, m);
    int bacx1 = bacDaThuc(x1, m);
    int bacx2 = bacDaThuc(x2, m);
    int bacy1 = bacDaThuc(y1, m);
    int bacy2 = bacDaThuc(y2, m);
    setMang0(q, m);
    setMang0(r, m);
    setMang0(x, 2 * m + 1);
    setMang0(y, 2 * m + 1);
    while (bacb != -1)
    {
        //ghi tung buoc
        printf("q: ");
        inDaThuc(q, m);
        printf("r: ");
        inDaThuc(r, m);
        printf("x: ");
        inDaThuc(x, m);
        printf("y: ");
        inDaThuc(y, m);

        //khong duoc dong
        setMang0(q, m);
        setMang0(r, m);
        setMang0(qx1, 2 * m + 1);
        setMang0(qy1, 2 * m + 1);
        setMang0(x, 2 * m + 1);
        setMang0(y, 2 * m + 1);
        setMang0(du, 2 * m + 1);

        // Gia tri cac da thuc sau tung buoc
        printf("a: ");
        inDaThuc(a, m);
        printf("b: ");
        inDaThuc(b, m);
        printf("x2: ");
        inDaThuc(x2, m);
        printf("x1: ");
        inDaThuc(x1, m);
        printf("y2: ");
        inDaThuc(y2, m);
        printf("y1: ");
        inDaThuc(y1, m);
        printf("\n");

        chiaDaThucNhiPhan(a, baca, b, bacb, q, r);
        int bacq = bacDaThuc(q, m);
        int bacr = bacDaThuc(r, m);

        nhanDaThucNhiPhan(q, bacq, x1, bacx1, qx1);
        int bacqx1 = bacDaThuc(qx1, 2 * m + 1);
        congDaThucNhiPhan(qx1, bacqx1, x2, bacx2, x);
        int bacx = bacDaThuc(x, 2 * m + 1);
        while (bacx >= baccpb)
        {
            chiaDaThucNhiPhan(x, bacx, cpb, baccpb, x, du);
            bacx = bacDaThuc(x, 2 * m + 1);
            setMang0(du, 2 * m + 1);
        }

        nhanDaThucNhiPhan(q, bacq, y1, bacy1, qy1);
        int bacqy1 = bacDaThuc(qy1, 2 * m + 1);
        congDaThucNhiPhan(qy1, bacqy1, y2, bacy2, y);
        int bacy = bacDaThuc(y, 2 * m + 1);
        while (bacy >= baccpb)
        {
            chiaDaThucNhiPhan(y, bacy, cpb, baccpb, y, du);
            bacy = bacDaThuc(y, 2 * m + 1);
            setMang0(du, 2 * m + 1);
        }

        copyArray(a, b, m);
        copyArray(b, r, m);
        copyArray(x2, x1, m);
        copyArray(x1, x, m);
        copyArray(y2, y1, m);
        copyArray(y1, y, m);



        bacx1 = bacDaThuc(x1, m);
        bacx2 = bacDaThuc(x2, m);
        bacy1 = bacDaThuc(y1, m);
        bacy2 = bacDaThuc(y2, m);
        baca = bacDaThuc(a, m);
        bacb = bacDaThuc(b, m);
    }

    //ghi tung buoc
    printf("q: ");
    inDaThuc(q, m);
    printf("r: ");
    inDaThuc(r, m);
    printf("x: ");
    inDaThuc(x, m);
    printf("y: ");
    inDaThuc(y, m);
    printf("a: ");
    inDaThuc(a, m);
    printf("b: ");
    inDaThuc(b, m);
    printf("x2: ");
    inDaThuc(x2, m);
    printf("x1: ");
    inDaThuc(x1, m);
    printf("y2: ");
    inDaThuc(y2, m);
    printf("y1: ");
    inDaThuc(y1, m);
    printf("\n");


    printf("Da thuc nghich dao cua a(x) voi da thuc bat kha quy g(x) la: ");
    inDaThuc(x2, m);



    free(x);
    free(y);
    free(q);
    free(r);
    free(x2);
    free(x1);
    free(y2);
    free(y1);
    free(qy1);
    free(qx1);
    free(cpb);
    free(du);

}

int main()
{
    int n, m;
    printf("Nhap truong t: ");
    scanf("%d", &m);

    int b[m + 1];
    printf("Nhap cac he so cua da thuc bat kha quy g(x) (cac he so la 0 hoac 1): ");
    for (int i = m; i >= 0; i--)
    {
        scanf("%d", &b[i]);
    }
    printf("Nhap bac cua da thuc a(x): ");
    scanf("%d", &n);

    int a[m + 1];
    setMang0(a, m);
    printf("Nhap cac he so cua da thuc a(x) (cac he so la 0 hoac 1): ");
    for (int i = n; i >= 0; i--)
    {
        scanf("%d", &a[i]);
    }

    euclideMoRong(a, n, b, m);


    free(a);
    free(b);

    return 0;
}
